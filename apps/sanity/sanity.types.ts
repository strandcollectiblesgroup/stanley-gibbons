/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Settings = {
  _id: string
  _type: 'settings'
  _createdAt: string
  _updatedAt: string
  _rev: string
  menu?: Menu
  footer?: FooterSettings
  customProductOptions?: Array<
    | ({
        _key: string
      } & CustomProductOptionColor)
    | ({
        _key: string
      } & CustomProductOptionSize)
  >
  notFoundPage?: NotFoundPage
  seo?: Seo
}

export type Demo = {
  _id: string
  _type: 'demo'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  seo?: Seo
  modules?: Array<
    | ({
        _key: string
      } & MediaAndTextModule)
    | ({
        _key: string
      } & DefaultImage)
  >
}

export type DefaultVideo = {
  _type: 'defaultVideo'
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  video?: string
}

export type DefaultImage = {
  _type: 'defaultImage'
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type PortableTextSimple = Array<{
  children?: Array<{
    marks?: Array<string>
    text?: string
    _type: 'span'
    _key: string
  }>
  style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
  listItem?: 'bullet' | 'number'
  markDefs?: Array<
    | ({
        _key: string
      } & LinkEmail)
    | ({
        _key: string
      } & LinkInternal)
    | ({
        _key: string
      } & LinkExternal)
  >
  level?: number
  _type: 'block'
  _key: string
}>

export type PortableText = Array<
  | {
      children?: Array<{
        marks?: Array<string>
        text?: string
        _type: 'span'
        _key: string
      }>
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
      listItem?: 'bullet' | 'number'
      markDefs?: Array<
        | ({
            _key: string
          } & LinkEmail)
        | ({
            _key: string
          } & LinkInternal)
        | ({
            _key: string
          } & LinkExternal)
      >
      level?: number
      _type: 'block'
      _key: string
    }
  | ({
      _key: string
    } & DefaultImage)
>

export type CollectionGroup = {
  _type: 'collectionGroup'
  title?: string
  collectionLinks?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'collection'
  }>
  collectionProducts?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'collection'
  }
}

export type CollectionLinks = Array<{
  _ref: string
  _type: 'reference'
  _weak?: boolean
  _key: string
  [internalGroqTypeReferenceTo]?: 'collection'
}>

export type CustomProductOptionSize = {
  _type: 'customProductOption.size'
  title?: string
  sizes?: Array<
    {
      _key: string
    } & CustomProductOptionSizeObject
  >
}

export type CustomProductOptionSizeObject = {
  _type: 'customProductOption.sizeObject'
  title?: string
  width?: number
  height?: number
}

export type CustomProductOptionColor = {
  _type: 'customProductOption.color'
  title?: string
  colors?: Array<
    {
      _key: string
    } & CustomProductOptionColorObject
  >
}

export type CustomProductOptionColorObject = {
  _type: 'customProductOption.colorObject'
  title?: string
  color?: Color
}

export type NotFoundPage = {
  _type: 'notFoundPage'
  title?: string
  body?: string
  collection?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'collection'
  }
}

export type Menu = {
  _type: 'menu'
  links?: Array<
    | ({
        _key: string
      } & CollectionGroup)
    | ({
        _key: string
      } & LinkInternal)
    | ({
        _key: string
      } & LinkExternal)
  >
}

export type MenuLinks = Array<
  | ({
      _key: string
    } & CollectionGroup)
  | ({
      _key: string
    } & LinkInternal)
  | ({
      _key: string
    } & LinkExternal)
>

export type FooterSettings = {
  _type: 'footerSettings'
  links?: Array<
    | ({
        _key: string
      } & LinkInternal)
    | ({
        _key: string
      } & LinkExternal)
  >
  text?: PortableTextSimple
}

export type LinkProduct = {
  _type: 'linkProduct'
  productWithVariant?: ProductWithVariant
  linkAction?: 'link' | 'addToCart' | 'buyNow'
  quantity?: number
}

export type LinkInternal = {
  _type: 'linkInternal'
  reference?:
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'collection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'home'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'page'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'product'
      }
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  showHero?: boolean
  hero?: Hero
  body?: PortableText
  seo?: Seo
}

export type Home = {
  _id: string
  _type: 'home'
  _createdAt: string
  _updatedAt: string
  _rev: string
  modules?: Array<
    {
      _key: string
    } & Hero
  >
  seo?: Seo
}

export type LinkExternal = {
  _type: 'linkExternal'
  url?: string
  newWindow?: boolean
}

export type LinkEmail = {
  _type: 'linkEmail'
  email?: string
}

export type MediaAndTextModule = {
  _type: 'mediaAndTextModule'
  title?: string
  body?: PortableText
  cta?: DefaultButton
  media?: FeaturedMedia
}

export type FeaturedMedia = {
  _type: 'featuredMedia'
  featuredMedia?: Array<
    | ({
        _key: string
      } & DefaultImage)
    | ({
        _key: string
      } & DefaultVideo)
  >
}

export type DefaultButton = {
  _type: 'defaultButton'
  label?: string
  buttonStyle?: 'primary' | 'secondary'
  link?: Array<
    | ({
        _key: string
      } & LinkExternal)
    | ({
        _key: string
      } & LinkInternal)
  >
}

export type ProductReference = {
  _type: 'productReference'
  productWithVariant?: ProductWithVariant
}

export type Hero = {
  _type: 'hero'
  title?: string
  description?: string
  link?: Array<
    | ({
        _key: string
      } & LinkInternal)
    | ({
        _key: string
      } & LinkExternal)
  >
}

export type CollectionReference = {
  _type: 'collectionReference'
  collection?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'collection'
  }
  showBackground?: boolean
}

export type Collection = {
  _id: string
  _type: 'collection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  hidden?: string
  titleProxy?: string
  slugProxy?: string
  modules?: Array<
    {
      _key: string
    } & Hero
  >
  store?: ShopifyCollection
  seo?: Seo
}

export type ShopifyCollection = {
  _type: 'shopifyCollection'
  createdAt?: string
  updatedAt?: string
  isDeleted?: boolean
  title?: string
  id?: number
  gid?: string
  slug?: Slug
  descriptionHtml?: string
  imageUrl?: string
  rules?: Array<
    {
      _key: string
    } & CollectionRule
  >
  disjunctive?: boolean
  sortOrder?: string
}

export type ProxyString = string

export type ProductWithVariant = {
  _type: 'productWithVariant'
  product?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'product'
  }
  variant?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productVariant'
  }
}

export type ProductVariant = {
  _id: string
  _type: 'productVariant'
  _createdAt: string
  _updatedAt: string
  _rev: string
  hidden?: string
  titleProxy?: ProxyString
  store?: ShopifyProductVariant
}

export type ShopifyProductVariant = {
  _type: 'shopifyProductVariant'
  createdAt?: string
  updatedAt?: string
  status?: 'active' | 'archived' | 'draft'
  isDeleted?: boolean
  title?: string
  sku?: string
  id?: number
  gid?: string
  productId?: number
  productGid?: string
  price?: number
  compareAtPrice?: number
  inventory?: Inventory
  option1?: string
  option2?: string
  option3?: string
  previewImageUrl?: string
}

export type Product = {
  _id: string
  _type: 'product'
  _createdAt: string
  _updatedAt: string
  _rev: string
  hidden?: string
  titleProxy?: ProxyString
  slugProxy?: ProxyString
  body?: PortableText
  store?: ShopifyProduct
  seo?: Seo
}

export type Seo = {
  _type: 'seo'
  title?: string
  description?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type ShopifyProduct = {
  _type: 'shopifyProduct'
  createdAt?: string
  updatedAt?: string
  status?: 'active' | 'archived' | 'draft'
  isDeleted?: boolean
  title?: string
  id?: number
  gid?: string
  slug?: Slug
  descriptionHtml?: string
  productType?: string
  vendor?: string
  tags?: string
  priceRange?: PriceRange
  previewImageUrl?: string
  options?: Array<
    {
      _key: string
    } & Option
  >
  variants?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productVariant'
  }>
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type PriceRange = {
  _type: 'priceRange'
  minVariantPrice?: number
  maxVariantPrice?: number
}

export type PlaceholderString = string

export type Option = {
  _type: 'option'
  name?: string
  values?: Array<string>
}

export type Inventory = {
  _type: 'inventory'
  isAvailable?: boolean
  management?: string
  policy?: string
}

export type CollectionRule = {
  _type: 'collectionRule'
  column?: string
  relation?: string
  condition?: string
}

export type MediaTag = {
  _id: string
  _type: 'media.tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: Slug
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type Color = {
  _type: 'color'
  hex?: string
  alpha?: number
  hsl?: HslaColor
  hsv?: HsvaColor
  rgb?: RgbaColor
}

export type RgbaColor = {
  _type: 'rgbaColor'
  r?: number
  g?: number
  b?: number
  a?: number
}

export type HsvaColor = {
  _type: 'hsvaColor'
  h?: number
  s?: number
  v?: number
  a?: number
}

export type HslaColor = {
  _type: 'hslaColor'
  h?: number
  s?: number
  l?: number
  a?: number
}
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./groq/demoExample.ts
// Variable: demoPageQuery
// Query: *[_type == "demo"]{  _createdAt,  _id,  _rev,  _type,  title,  modules[] {    _key,    _type,    _type == "mediaAndTextModule" => {        title,    body[]{    _key,    _type,    children[]{      _key,      _type,      marks,      text    },    markDefs,    style  },  cta {      _type,  buttonStyle,  label,  link[0] {    _key,    _type,    _type == "linkInternal" => {        ...reference-> {    _id,    _type,    _type == "product" => {      store {          "slug": slug.current      }    },    _type != "product" => {        "slug": slug.current    },  }    },    _type == "linkExternal" => {        newWindow,  url    },  }  },  media {      featuredMedia[0] {    _key,    _type,    _type == "defaultImage" => {        image {    _key,    _type,    alt,    asset -> {      _ref,      _type,      url    }  }    },    _type == "defaultVideo" => {          image {    _key,    _type,    alt,    asset -> {      _ref,      _type,      url    }  },  video    }  }  }    }  },  seo {    _type,    image{      _type,      asset->{        _ref,        _type      }    }  },    "slug": slug.current,}
export type DemoPageQueryResult = Array<{
  _createdAt: string
  _id: string
  _rev: string
  _type: 'demo'
  title: string | null
  modules: Array<
    | {
        _key: string
        _type: 'defaultImage'
      }
    | {
        _key: string
        _type: 'mediaAndTextModule'
        title: string | null
        body: Array<
          | {
              _key: string
              _type: 'block'
              children: Array<{
                _key: string
                _type: 'span'
                marks: Array<string> | null
                text: string | null
              }> | null
              markDefs: Array<
                | ({
                    _key: string
                  } & LinkEmail)
                | ({
                    _key: string
                  } & LinkExternal)
                | ({
                    _key: string
                  } & LinkInternal)
              > | null
              style: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal' | null
            }
          | {
              _key: string
              _type: 'defaultImage'
              children: null
              markDefs: null
              style: null
            }
        > | null
        cta: {
          _type: 'defaultButton'
          buttonStyle: 'primary' | 'secondary' | null
          label: string | null
          link:
            | {
                _key: string
                _type: 'linkExternal'
                newWindow: boolean | null
                url: string | null
              }
            | {
                _key: string
                _type: 'product'
                _id: string
                slug: string | null
                store: {
                  slug: string | null
                } | null
              }
            | null
        } | null
        media: {
          featuredMedia:
            | {
                _key: string
                _type: 'defaultImage'
                image: {
                  _key: null
                  _type: 'image'
                  alt: string | null
                  asset: {
                    _ref: null
                    _type: 'sanity.imageAsset'
                    url: string | null
                  } | null
                } | null
              }
            | {
                _key: string
                _type: 'defaultVideo'
                image: {
                  _key: null
                  _type: 'image'
                  alt: string | null
                  asset: {
                    _ref: null
                    _type: 'sanity.imageAsset'
                    url: string | null
                  } | null
                } | null
                video: string | null
              }
            | null
        } | null
      }
  > | null
  seo: {
    _type: 'seo'
    image: {
      _type: 'image'
      asset: {
        _ref: null
        _type: 'sanity.imageAsset'
      } | null
    } | null
  } | null
  slug: string | null
}>
